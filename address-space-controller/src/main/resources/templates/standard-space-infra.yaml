apiVersion: v1
kind: Template
metadata:
  labels:
    app: enmasse
  name: standard-space-infra
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
      enmasse.io/address-space-namespace: ${ADDRESS_SPACE_NAMESPACE}
      enmasse.io/service-port.amqp: 5672
      enmasse.io/service-port.amqps: 5671
      enmasse.io/service-port.amqp-wss: 443
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: messaging-${INFRA_UUID}
  spec:
    ports:
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: amqps
      port: 5671
      protocol: TCP
      targetPort: 5671
    - name: amqps-normal
      port: 55671
      protocol: TCP
      targetPort: amqps-normal
    - name: amqps-broker
      port: 56671
      protocol: TCP
      targetPort: amqps-broker
    - name: inter-router
      port: 55672
      protocol: TCP
      targetPort: 55672
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      capability: router
      infraUuid: ${INFRA_UUID}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
      enmasse.io/cert-cn: router.${INFRA_UUID}
      enmasse.io/cert-secret: router-internal-cert.${INFRA_UUID}
      prometheus.io/path: /metrics
      prometheus.io/port: '8080'
      prometheus.io/scrape: 'true'
    labels:
      app: enmasse
      name: qdrouterd
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: qdrouterd-${INFRA_UUID}
  spec:
    serviceName: qdrouterd-headless-${INFRA_UUID}
    replicas: 1
    selector:
      matchLabels:
        app: enmasse
        capability: router
        name: qdrouterd
        infraType: standard
        infraUuid: ${INFRA_UUID}
    template:
      metadata:
        annotations:
          addressSpace: ${ADDRESS_SPACE}
        labels:
          app: enmasse
          capability: router
          name: qdrouterd
          infraType: standard
          infraUuid: ${INFRA_UUID}
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: enmasse
                      capability: router
                      name: qdrouterd
                      infraType: standard
                      infraUuid: ${INFRA_UUID}
                  topologyKey: kubernetes.io/hostname
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: QDROUTERD_CONF_TYPE
            value: json
          - name: QDROUTERD_CONF
            value: "/etc/qpid-dispatch/config/qdrouterd.json"
          - name: QDROUTERD_AUTO_MESH_DISCOVERY
            value: "INFER"
          - name: QDROUTERD_AUTO_MESH_SERVICE_NAME
            value: "qdrouterd-headless-${INFRA_UUID}"
          image: ${ROUTER_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /healthz
              port: local-http
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          name: router
          ports:
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 5671
            name: amqps
            protocol: TCP
          - containerPort: 7777
            name: local
            protocol: TCP
          - containerPort: 7770
            name: local-http
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 55671
            name: amqps-normal
            protocol: TCP
          - containerPort: 56671
            name: amqps-broker
            protocol: TCP
          volumeMounts:
          - mountPath: /etc/qpid-dispatch/ssl
            name: ssl-certs
            readOnly: true
          - mountPath: /etc/qpid-dispatch/authservice-ca
            name: authservice-ca
            readOnly: true
          - mountPath: /etc/enmasse-certs
            name: router-internal-cert
            readOnly: true
          - mountPath: /etc/qpid-dispatch/config
            name: qdrouterd-config
        volumes:
        - name: ssl-certs
          secret:
            secretName: ${MESSAGING_SECRET}
        - name: authservice-ca
          secret:
            secretName: authservice-ca.${INFRA_UUID}
        - name: router-internal-cert
          secret:
            secretName: router-internal-cert.${INFRA_UUID}
        - name: qdrouterd-config
          configMap:
            name: qdrouterd-config.${INFRA_UUID}
- apiVersion: v1
  data:
    tls.crt: ${AUTHENTICATION_SERVICE_CA_CERT}
  kind: Secret
  metadata:
    name: authservice-ca.${INFRA_UUID}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
- apiVersion: v1
  kind: Secret
  metadata:
    name: broker-support-${INFRA_UUID}
    annotations:
      addressSpace: ${ADDRESS_SPACE}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
      role: support-credentials
  type: Opaque
  data:
    username: ${BROKER_SUPPORT_USER}
    password: ${BROKER_SUPPORT_PWD}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
      enmasse.io/cert-secret: admin-internal-cert.${INFRA_UUID}
    labels:
      app: enmasse
      name: admin
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: admin.${INFRA_UUID}
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: enmasse
        name: admin
        infraType: standard
        infraUuid: ${INFRA_UUID}
    template:
      metadata:
        annotations:
          addressSpace: ${ADDRESS_SPACE}
        labels:
          app: enmasse
          name: admin
          infraType: standard
          infraUuid: ${INFRA_UUID}
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/operator-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: MESSAGING_SERVICE_HOST
            value: messaging-${INFRA_UUID}
          - name: MESSAGING_SERVICE_PORT_AMQPS_NORMAL
            value: 55671
          - name: MESSAGING_SERVICE_PORT_AMQPS_BROKER
            value: 56671
          - name: CERT_DIR
            value: /etc/enmasse-certs
          - name: TEMPLATE_DIR
            value: /opt/templates
          - name: STANDARD_INFRA_CONFIG_NAME
            value: ${STANDARD_INFRA_CONFIG_NAME}
          - name: ADDRESS_SPACE
            value: ${ADDRESS_SPACE}
          - name: ADDRESS_SPACE_NAMESPACE
            value: ${ADDRESS_SPACE_NAMESPACE}
          - name: INFRA_UUID
            value: ${INFRA_UUID}
          - name: ADDRESS_SPACE_PLAN
            value: ${ADDRESS_SPACE_PLAN}
          - name: RESYNC_INTERVAL
            value: ${CONTROLLER_RESYNC_INTERVAL}
          - name: CHECK_INTERVAL
            value: ${CONTROLLER_CHECK_INTERVAL}
          - name: EVENT_QUEUE_SIZE
            value: ${CONTROLLER_EVENT_QUEUE_SIZE}
          - name: ENABLE_EVENT_LOGGER
            value: ${ENABLE_EVENT_LOGGER}
          - name: AUTHENTICATION_SERVICE_HOST
            value: ${AUTHENTICATION_SERVICE_HOST}
          - name: AUTHENTICATION_SERVICE_PORT
            value: ${AUTHENTICATION_SERVICE_PORT}
          - name: AUTHENTICATION_SERVICE_CA_SECRET
            value: authservice-ca
          - name: AUTHENTICATION_SERVICE_CLIENT_SECRET
            value: ${AUTHENTICATION_SERVICE_CLIENT_SECRET}
          - name: JAVA_OPTS
            value: -verbose:gc
          - name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
            value: ${AUTHENTICATION_SERVICE_SASL_INIT_HOST}
          - name: MESSAGING_SECRET
            value: ${MESSAGING_SECRET}
          - name: BROKER_IMAGE
            value: ${BROKER_IMAGE}
          - name: BROKER_PLUGIN_IMAGE
            value: ${BROKER_PLUGIN_IMAGE}
          - name: TOPIC_FORWARDER_IMAGE
            value: ${TOPIC_FORWARDER_IMAGE}
          - name: IMAGE_PULL_POLICY
            value: ${IMAGE_PULL_POLICY}
          - name: FS_GROUP_FALLBACK_MAP
            value: ${FS_GROUP_FALLBACK_MAP}
          image: ${STANDARD_CONTROLLER_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
          name: standard-controller
          ports:
          - containerPort: 8889
            name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
          volumeMounts:
          - mountPath: /etc/enmasse-certs
            name: admin-internal-cert
            readOnly: true
        - env:
          - name: MESSAGING_SERVICE_HOST
            value: messaging-${INFRA_UUID}
          - name: MESSAGING_SERVICE_PORT_AMQPS_NORMAL
            value: 55671
          - name: MESSAGING_SERVICE_PORT_AMQPS_BROKER
            value: 56671
          - name: INFRA_UUID
            value: ${INFRA_UUID}
          - name: ADDRESS_SPACE_TYPE
            value: standard
          - name: ADDRESS_SPACE_PLAN
            value: ${ADDRESS_SPACE_PLAN}
          - name: BROKER_GLOBAL_MAX_SIZE
            value: ${BROKER_GLOBAL_MAX_SIZE}
          - name: CERT_DIR
            value: /etc/enmasse-certs
          - name: RESYNC_INTERVAL
            value: ${CONTROLLER_RESYNC_INTERVAL}
          - name: AUTHENTICATION_SERVICE_HOST
            value: ${AUTHENTICATION_SERVICE_HOST}
          - name: AUTHENTICATION_SERVICE_PORT
            value: ${AUTHENTICATION_SERVICE_PORT}
          - name: AUTHENTICATION_SERVICE_CA_SECRET
            value: authservice-ca
          - name: AUTHENTICATION_SERVICE_CLIENT_SECRET
            value: ${AUTHENTICATION_SERVICE_CLIENT_SECRET}
          - name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
            value: ${AUTHENTICATION_SERVICE_SASL_INIT_HOST}
          - name: ADDRESS_SPACE
            value: ${ADDRESS_SPACE}
          - name: ADDRESS_SPACE_NAMESPACE
            value: ${ADDRESS_SPACE_NAMESPACE}
          - name: MESSAGING_CERT
            value: /opt/agent/messaging-cert/tls.crt
          image: ${AGENT_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 30
            timeoutSeconds: 5
          name: agent
          ports:
          - containerPort: 8888
            name: http
          - containerPort: 56710
            name: amqps
          - containerPort: 56720
            name: amqp-ws
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 30
            timeoutSeconds: 5
          volumeMounts:
          - mountPath: /opt/agent/authservice-ca
            name: authservice-ca
            readOnly: true
          - mountPath: /etc/enmasse-certs
            name: admin-internal-cert
            readOnly: true
          - mountPath: /opt/agent/messaging-cert
            name: messaging-cert
            readOnly: true
        serviceAccountName: ${ADDRESS_SPACE_ADMIN_SA}
        volumes:
        - name: authservice-ca
          secret:
            secretName: authservice-ca.${INFRA_UUID}
        - name: admin-internal-cert
          secret:
            secretName: admin-internal-cert.${INFRA_UUID}
        - name: messaging-cert
          secret:
            secretName: ${MESSAGING_SECRET}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
    labels:
      monitoring-key: enmasse-tenants
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
      component: router
    name: qdrouterd-headless-${INFRA_UUID}
  spec:
    clusterIP: None
    ports:
    - name: inter-router
      port: 55672
      targetPort: 55672
    - name: health
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      capability: router
      infraUuid: ${INFRA_UUID}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: ragent-${INFRA_UUID}
  spec:
    ports:
    - name: amqp
      port: 5671
      targetPort: 55671
    selector:
      name: admin
      infraUuid: ${INFRA_UUID}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
    labels:
      app: enmasse
      component: admin
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: standard-controller-${INFRA_UUID}
  spec:
    ports:
    - name: health
      port: 8080
      protocol: TCP
      targetPort: 8889
    selector:
      name: admin
      infraUuid: ${INFRA_UUID}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: queue-scheduler-${INFRA_UUID}
  spec:
    ports:
    - name: amqp
      port: 5672
      targetPort: 55671
    selector:
      name: admin
      infraUuid: ${INFRA_UUID}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
      addressSpaceNamespace: ${ADDRESS_SPACE_NAMESPACE}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
      component: agent
    name: agent-${INFRA_UUID}
  spec:
    ports:
    - name: amqps
      port: 5671
      targetPort: 56710
    selector:
      name: admin
      infraUuid: ${INFRA_UUID}
parameters:
- name: INFRA_UUID
  description: UUID to use for infrastructure
  required: true
- name: INFRA_NAMESPACE
  description: Namespace where infrastructure is created
  required: true
- name: ADDRESS_SPACE_PLAN
  description: Name of address space plan followed
  required: true
- description: The secret with cert for the messaging service
  name: MESSAGING_SECRET
  required: true
- description: The name of our address space
  name: ADDRESS_SPACE
  required: true
- description: The namespace of our address space
  name: ADDRESS_SPACE_NAMESPACE
  required: true
- description: The hostname of the authentication service used by this address space
  name: AUTHENTICATION_SERVICE_HOST
  required: true
- description: The port of the authentication service used by this address space
  name: AUTHENTICATION_SERVICE_PORT
  required: true
- description: The CA cert to use for validating authentication service cert
  name: AUTHENTICATION_SERVICE_CA_CERT
  required: true
- description: The client cert to use as identity against authentication service
  name: AUTHENTICATION_SERVICE_CLIENT_SECRET
- description: The hostname to use in sasl init
  name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
- description: Name standard infra config
  name: STANDARD_INFRA_CONFIG_NAME
  required: true
- description: Enable logging of kubernetes events
  name: ENABLE_EVENT_LOGGER
  value: 'true'
- description: Interval (in seconds) to use between controller resync
  name: CONTROLLER_RESYNC_INTERVAL
  value: '600'
- description: Interval (in seconds) to use between status checks
  name: CONTROLLER_CHECK_INTERVAL
  value: '30'
- description: Max number of events queued up for controller
  name: CONTROLLER_EVENT_QUEUE_SIZE
  value: '10000'
- description: The service account with address space admin privileges
  name: ADDRESS_SPACE_ADMIN_SA
  value: address-space-admin
- name: IMAGE_PULL_POLICY
  description: Image Pull Policy
  value: ${env.IMAGE_PULL_POLICY}
- name: ROUTER_IMAGE
  description: Router image
  value: ${env.ROUTER_IMAGE}
- name: STANDARD_CONTROLLER_IMAGE
  description: Standard Controller Image
  value: ${env.STANDARD_CONTROLLER_IMAGE}
- name: AGENT_IMAGE
  description: Agent Image
  value: ${env.AGENT_IMAGE}
- name: BROKER_IMAGE
  description: Broker Image
  value: ${env.BROKER_IMAGE}
- name: BROKER_PLUGIN_IMAGE
  description: Broker Plugin Image
  value: ${env.BROKER_PLUGIN_IMAGE}
- name: TOPIC_FORWARDER_IMAGE
  description: Topic Forwarder Image
  value: ${env.TOPIC_FORWARDER_IMAGE}
- description:
  name: FS_GROUP_FALLBACK_MAP
- description: Username for broker support access
  name: BROKER_SUPPORT_USER
- description: Password for broker support access
  name: BROKER_SUPPORT_PWD
- description: Global max size for all addresses in broker. Cannot be larger than a 1/4 of JVM size
  name: BROKER_GLOBAL_MAX_SIZE